---
title: "House of Excellence"

# Nome do documento PDF gerado
output-file: titulo do projeto
---

# Mudanças que estou ciente:

## Ajeitar a planilha, estava usando apenas uma aba do banco de dados, agora vou juntar todas em uma só e transformar em apenas uma com as mesmas variáveis.

## Não sei se todas as questões de fontes e cores estão corretas, gostaria de saber se tem algo que estou fazendo errado e que o pacote da estat não cobre e preciso fazer manualmente.

## Suponde que o banco de dados estivesse correto, essa seria uma solução razoável para a questão 1?





```{r}
#| include: false
# Padronizações
```



```{r}
#| include: false
source("rdocs/source/packages.R")
```




```{r}
#Pacotes:

#| include: false
library(pacman)
pacman::p_load(tidyverse, knitr, readxl)

```


```{r}
#| include: false

#Tabela carregada

my_path = "C:\\Users\\Eriq\\Desktop\\Projects\\Ps estat\\Olimpiadas 2000 - 2016.xlsx"
df <- excel_sheets(my_path) %>%
  map_df(~read_xlsx(my_path,.))
```





```{r}

# Apenas medalhistas:

#| include: false
df <- df %>%
  filter(!is.na(Medal))
```


# Introdução

  O seguinte projeto tem como objetivo trazer uma análise descritiva e exploratória de dados fornecidos pela "House of Excellence", visando otimizar o desempenho de seus atletas.
  
  O banco de dados conta com 9 variáveis e  67.474 observações, sendo as mais importantes (tirando as informações básicas de cada atleta, como nome, peso e altura); "Sport": Esporte praticado pelo atleta, "Event": Nome do evento esportivo que o atleta participou, "Medal": medalha adiquirida pelo atleta na competição.
  
  Todas as analises foram feitas utilizando o software RStudio
  


# Referencial Teórico

?

# Análises

## Top 5 países com maior número de mulheres medalhistas


```{r}

# crio novo banco de dados para mulheres medalhistas, alem disso, agrupo por equipes e faco a frequencia para cada um de forma ordenada e ficando apenas os 5 primeiros.

top_mulheres_pais <- df %>% 
  filter(Gender == "F") %>% 
  group_by(Team) %>%
  count(sort = T) %>%
  head(n = 5) 

#plot utilizando fct_reorder para nao ser plotado um grafico em ordem alfabetica no lugar de ordenado por mais medalhas.

top_mulheres_pais %>%
  ggplot(aes(x = fct_reorder(Team, n, .desc = T), y = n, fill = Team[1])) +
  geom_col() +
  labs(y = "Quantidade de medalhistas", x = "País medalhista") +
  theme_estat()

```






## 2. Valor IMC por esporte, estes sendo, ginástica, futebol, judô, atletismo e badminton (20/10)

```{r}

imc_calculado <- df %>%
  select(Sport, `Height (cm)`, `Weight (lbs)`) %>%
  mutate(imc = `Height (cm)` / `Weight (lbs)`) %>%
  filter(Sport %in% c("Gymnastics", "Judo", "Athletics", "Badminton"))

df <- df %>%
  mutate(imc = round(`Height (cm)` / `Weight (lbs)`, 2))

```

Quantidade de "na's" nas variaveis de altura e peso respectivamente

```{r}

sum(is.na(imc_calculado$`Height (cm)`))
```

```{r}

sum(is.na(imc_calculado$`Weight (lbs)`))
```

Como a quantidade de "na's" é muito pequena, os "na's" serão considerados um evento aleatório e as linhas serão removidas.

```{r}
imc_calculado <- na.omit(imc_calculado)
```

{r}

tabela1 <- imc_calculado %>%
  group_by(Sport) %>%
  summarise(media = round(mean(imc), 2), variancia = round(var(imc), 2), mediana = round(median(imc), 2))

tabela1 %>%
  ggplot(aes(x = "Sport", y = "media")) +
  geom_col() +
  theme_estat()



{r}

imc_calculado %>%
  ggplot(aes(x = reorder(Sport, imc, FUN = median, decreasing = T), y = imc, fill = Sport[1])) +
  geom_boxplot() +
  theme_estat() +
  labs(y = "IMC", x = "Esporte", fill = "Esporte")
  


## 3. Top 3 medalhistas gerais por quantidade de cada tipo de medalha (27/10)


{r}
df <- df %>%
  mutate(Medal_value = case_when(
    Medal == "Gold" ~ 3,
    Medal == "Silver" ~ 2,
    Medal == "Bronze" ~ 1
  ))





{r}

top_medalhistas <- df %>%
  group_by(Names) %>%
  summarise(n = n(), ) %>%
  arrange(desc(n)) %>%
  head()


```


{r}

top_nomes <- top_medalhistas %>%
  filter(n == 4) %>%
  select(Names) %>%
  as_vector()

terceiro <- df %>%
  filter(Names %in% top_nomes) %>%
  group_by(Names) %>%
  summarise(Medal_value = sum(Medal_value)) %>%
  arrange(desc(Medal_value)) %>%
  head(1) %>%
  select(Names) 

```





# Conclusões

?
